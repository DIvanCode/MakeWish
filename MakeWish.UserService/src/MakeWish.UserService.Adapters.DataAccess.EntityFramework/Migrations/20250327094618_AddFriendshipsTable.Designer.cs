// <auto-generated />
using MakeWish.UserService.Adapters.DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MakeWish.UserService.Adapters.DataAccess.EntityFramework.Migrations
{
    [DbContext(typeof(UnitOfWork))]
    [Migration("20250327094618_AddFriendshipsTable")]
    partial class AddFriendshipsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MakeWish.UserService.Models.Friendship", b =>
                {
                    b.Property<string>("first_user")
                        .HasColumnType("varchar");

                    b.Property<string>("second_user")
                        .HasColumnType("varchar");

                    b.Property<bool>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bool")
                        .HasDefaultValue(false)
                        .HasColumnName("is_confirmed");

                    b.HasKey("first_user", "second_user");

                    b.HasIndex("first_user");

                    b.HasIndex("second_user");

                    b.ToTable("Friendships", (string)null);
                });

            modelBuilder.Entity("MakeWish.UserService.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar")
                        .HasColumnName("password_hash");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MakeWish.UserService.Models.Friendship", b =>
                {
                    b.HasOne("MakeWish.UserService.Models.User", "FirstUser")
                        .WithMany()
                        .HasForeignKey("first_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MakeWish.UserService.Models.User", "SecondUser")
                        .WithMany()
                        .HasForeignKey("second_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FirstUser");

                    b.Navigation("SecondUser");
                });
#pragma warning restore 612, 618
        }
    }
}
