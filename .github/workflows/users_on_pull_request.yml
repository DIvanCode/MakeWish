name: UserService pull request

on:
  pull_request:
    branches:
      - master
    paths:
      - MakeWish.UserService/**
      - .github/**

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore MakeWish.UserService/MakeWish.UserService.sln

      - name: Build solution
        run: dotnet build MakeWish.UserService/MakeWish.UserService.sln --no-restore
      
      - name: Run tests 
        run: dotnet test MakeWish.UserService/MakeWish.UserService.sln
  build:
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python and Ansible
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install ansible docker

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Run Ansible playbook
        run: |
          cd ansible/build
          ansible-playbook -i inventory playbooks/user-service.yml \
            --extra-vars="version=${{ github.sha }}"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python and Ansible
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install ansible docker
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Create Ansible Vault password file
        run: echo "${{ secrets.VAULT_PASSWORD_DEPLOY }}" > ~/vault_pass.txt

      - name: Run Ansible playbook (Deploy UserService)
        run: |
          cd ansible/deploy
          ansible-playbook -i inventory playbooks/user-service.yml \
            --extra-vars="version=${{ github.sha }} ansible_user=root ansible_password=${{ secrets.SSH_PASSWORD }}" \
            --vault-password-file ~/vault_pass.txt

      - name: Clean up
        if: always()
        run: rm -f ~/vault_pass.txt